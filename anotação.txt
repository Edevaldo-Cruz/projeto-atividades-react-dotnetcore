Criar projeto
    npx create-react-app nome-projeto

Executar o projeto
    npm start

Limpar projeto
    excluir os arquivos da src:
        App.test
        logo
        setupTests
        reportWebVitals

        remover do index.js as seguinte linhas de codigo:

            import reportWebVitals from './reportWebVitals';

            // If you want to start measuring performance in your app, pass a function
            // to log results (for example: reportWebVitals(console.log))
            // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
            reportWebVitals();

        remover o conteudo dos arquivos App.css e index.css 

instalar bootstrap           
    npm install bootstrap
    npm install react-bootstrap

    inserir codigo no arquivo index.js
        import 'bootstrap/dist/css/bootstrap.min.css';

Instalar font awesome
    npm install --save @fortawesome/fontawesome-free

    importar no index.css
        @import url("../node_modules/@fortawesome/fontawesome-free/css/all.min.css")


         

Criando um projeto webAPI .NET         
    dotnet new webapi -n ProAtividade.API

executar apos a criação 
    dotnet dev-certs https --clean

    dotnet dev-certs https --trust

PARA FRONTEND ACESSAR O BACKEND
    services.AddCors();


     app.UseCors(option => option.AllowAnyHeader()
                                        .AllowAnyMethod()
                                        .AllowAnyOrigin());


*****CAMADAS*****
FAZER ISSO DENTRO DA PASTA SRC DO BACKEND

Criando uma soluçãor
    dotnet new sln -n ProAtividade

    dotnet new classlib -n ProAtividade.Domain
    dotnet new classlib -n ProAtividade.Data

Adicinando projeto na solução
    dotnet sln ProAtividade.sln add ProAtividade.API
    dotnet sln ProAtividade.sln add ProAtividade.Data
    dotnet sln ProAtividade.sln add ProAtividade.Domain

BUILD   
    dotnet restore

Adicionando referencia    
    dotnet add ProAtividade.API reference ProAtividade.Data
    dotnet add ProAtividade.API reference ProAtividade.Domain

    dotnet add ProAtividade.Data reference ProAtividade.Domain
    ** Domain não recebe referencia de outro lugar.

Oraganizando o projeto
    Apagar class1 do Domain e Data.
    Criar um diretorio chamado Entities, Interfaces e Services no Domain
    Criar um diretorio chamado Context, Mappings e Repositories no Data

    Mover o arquivo Data/DataContext.cs para ProAtividade/Context
        alterar o name space 
            namespace ProAtividade.API.Data
                        PARA
            namespace ProAtividade.Data.Context
        Apagar a pasta Data do API junto com a pasta migrations

    Mover os arquivos da Model para Domain/Entities 
        alterar o name space 
            PARA    
                namespace ProAtividade.Domain.Entities
            
        incluir DataCriacao DataConclusao na Model Atividade

